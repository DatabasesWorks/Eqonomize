<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.2-Based Variant V1.1//EN" "dtd/kdex.dtd" [
  <!ENTITY eqonomize "<application
>Eqonomize!</application
>">
  <!ENTITY kappname "&eqonomize;"
><!-- Do *not* replace kappname-->
  <!ENTITY % addindex "IGNORE">
  <!ENTITY % French "INCLUDE">
]>

<book lang="&language;">

<bookinfo>
<title
>La documentation d'&eqonomize;</title>

<authorgroup>
<author
><firstname
></firstname
> <othername
></othername
> <surname
>Hanna Knutsson</surname
> <affiliation
> <address
><email
>hanna_k@fmgirl.com</email
></address>
</affiliation>
</author>
</authorgroup>

<copyright>
<year
>1999</year>
<year
>2006</year>
<holder
>Hanna Knutsson</holder>
</copyright>
<!-- Translators: put here the copyright notice of the translation -->
<!-- Put here the FDL notice.  Read the explanation in fdl-notice.docbook
     and in the FDL itself on how to use it. -->
<legalnotice
>&FDLNotice;</legalnotice>

<date
>2006-07-12</date>
<releaseinfo
>0.1</releaseinfo>


<abstract>
<para
>&eqonomize; est une application pour garder une trace de vos finances personnelles. Ce manuel est loin d'être fini. </para>
</abstract>

<keywordset>
<keyword
>KDE</keyword>
<keyword
>Eqonomize</keyword>
<keyword
>Argent</keyword>
<keyword
>Finances</keyword>
<keyword
>Comptabilité</keyword>
<keyword
>Budget</keyword>
</keywordset>

</bookinfo>

<chapter id="introduction">
<title
>Introduction</title>

<para
>En construction. </para>
</chapter>

<chapter id="accounting">
<title
>Comptabilité avec &eqonomize;</title>

<sect1 id="accounting-overview">
<title
>Synthèse</title>

<para
>Le principe de base dernière la comptabilité dans &eqonomize; est l'idée de l'argent passant à travers des transactions entre des comptes qui sont des réservoirs. Une transaction représente un gain (vous recevez de l'argent), une perte (vous achetez quelque chose), ou une transformation ( vous retirez depuis un dépôt dans un compte banquaire) de l'argent. </para>
<para
>Une transaction signifie toujours que de l'argent est transféré d'un compte à l'autre. Une dépense (quelque chose est acheté) peut par exemple vouloir dire que vous payer en liquide depuis votre compte de liquidité. Ce compte représente les produits et services que vous payez. Cela représente l'argent que vous n'avez plus après des dépenses. et c'est pourquoi qu'il est utile pour conserver l'enregistrement. </para>
<para
>Les entrées sont généralement placées sur un compte banquaire et retirées d'un compte d'entrée. Cela veut dire que les comptes d'entrée auront une valeur négative, mais pour éviter la confusion, la valeur des comptes d'entrée est affichée comme des valeurs positives. </para>
<para
>Différent compte d'entrée et de dépense sont utilisés pour catégoriser, et ainsi plus naturellement référencés comme catégories. D'autres comptes, lesquels représentent l'argent actuellement disponible sont souvent les vrais comptes banquaires dans la réalité, sont simplement référencés comme comptes. </para>

</sect1>

<sect1 id="accounting-accounts">
<title
>Comptes et Catégories</title>

<para></para>

</sect1>

<sect1 id="accounting-transactions">
<title
>Transactions</title>

<para
>&eqonomize; a trois types différents de transactions basiques - dépenses, entrées, et transferts. Actions utilise des transactions spéciales décrites dans <xref linkend="accounting-securities"/>. </para>
<para
>Les dépenses représentent une perte d'argent, une transaction où vous donnez de l'argent, la plupart du temps vous recevez quelque chose en retour. Cela peut être une facture pour des produits ou des services, ou un cadeau (ou vous prêtez de l'argent à quelqu'un). </para>
<para
>Les entrées représentent un gain d'argent; quand vous recevez de l'argent. Vous êtes à l'opposé d'une dépense, quand vous recevez un paiement pour des produits et des services produits (souvent un salaire pour un travail régulier), ou quand quelqu'un vous donne de l'argent comme un cadeau ou un emprunt. </para>
<para
>Le troisième type de transaction, le transfert, représente ni une perte ni un gain, mais un transfert d'argent depuis un compte vers un autre. Cela peut être par exemple quand vous retirez de l'argent liquide depuis un compte, ou quand vous transférez de l'argent vers un compte de sauvegardes. </para>
<para
>Chaque transaction a un nombre d'obligation ou de propriétés optionnelles. Toutes ces transactions basiques ont quatre propriétés obligatoires - valeur, date, et depuis/vers les comptes/les catégories. Valeur représente le compte où l'argent de la transaction est affecté, date quand la transaction a eut lieu, depuis le compte où l'argent et pris et vers le compte où l'argent arrive. Ce sont des noms de propriétés génériques, lesquelles montrent que tout type de transaction sont généralement les mêmes. </para>
<para
>Pour les dépenses la valeur est un coût, une valeur positive représentant une perte d'argent et le compte/la catégorie vers... ou le compte/la catégorie depuis... est le compte où la dépense est payée. La catégorie est toujours une catégorie de dépense et le depuis le compte/la catégorie un compte. </para>
<para
>Pour les entrées la valeur est une entrée, une valeur positive représentant un gain d'argent et le compte/la catégorie depuis... est appelé catégorie et le compte/la catégorie vers... est un compte où l'entrée est déposée. La catégorie est toujours une catégorie entrée et le compte depuis/vers un compte. </para>
<para
>Pour les transferts la valeur est appelée un compte, et le vers/depuis les comptes/catégories sont tous les deux des comptes. </para>
<table id="qalculate-TBL-mandatory-properties" frame="topbot" colsep="1">
	<title
>Propriétés obligatoires</title>
	<tgroup cols="2" colsep="1" rowsep="0">
		<colspec colname="COLSPEC0"/>
		<colspec colname="COLSPEC1"/>
		<colspec colname="COLSPEC2"/>
		<colspec colname="COLSPEC3"/>
		<thead>
			<row valign="top">
				<entry colname="COLSPEC0"
><para
>Générique</para
></entry>
				<entry colname="COLSPEC1"
><para
>Dépense</para
></entry>
				<entry colname="COLSPEC2"
><para
>Entrée</para
></entry>
				<entry colname="COLSPEC2"
><para
>Transfert</para
></entry>
			</row>
		</thead
> 
                <tbody>
			<row valign="top">
				<entry
><para
>Valeur</para
></entry>
				<entry
><para
>Coût</para
></entry>
				<entry
><para
>Entrée</para
></entry>
				<entry
><para
>Montant</para
></entry>
			</row>
			<row valign="top">
				<entry
><para
>Date</para
></entry>
				<entry
><para
>Date</para
></entry>
				<entry
><para
>Date</para
></entry>
				<entry
><para
>Date</para
></entry>
			</row>
			<row valign="top">
				<entry
><para
>Depuis le compte/la catégorie</para
></entry>
				<entry
><para
>Compte (compte)</para
></entry>
				<entry
><para
>Catégorie (catégorie entrée)</para
></entry>
				<entry
><para
>Depuis (compte)</para
></entry>
			</row>
			<row valign="top">
				<entry
><para
>Vers le compte/la catégorie</para
></entry>
				<entry
><para
>Catégorie (catégorie dépense)</para
></entry>
				<entry
><para
>Compte (compte)</para
></entry>
				<entry
><para
>Vers (compte)</para
></entry>
			</row>
		</tbody>
	</tgroup>
</table>
<para
>Toutes les transactions ont en plus deux propriétés optionnelles. La propriété de description contient l'information sur la nature de la transaction. Pour les dépenses et entrées cela peut être considéré comme une sous-catégorie flexible. La propriété commentaire est utilisée pour une information additionnelle. Par exemple si vous achetez une paire de chaussures, vous pouvez créer une dépense dans la catégorie habillement, avec la description <quote
>Chaussures</quote
> et des commentaires <quote
>Pradas rouge lumineux</quote
>. </para>
<para
>Dépenses et entrées ont également deux propriétés non activées par défaut dans le programme. La propriété quantité dénote combien d'entités sont impliqués dans la transaction. Cela peut être un nombre entier, comme deux CD, ou une fraction, comme 0.56 kg de pommes (les unités ne sont pas incluses). Cette propriété est par défaut de 1 et n'affecte pas la valeur (la valeur par unité est égale à la valeur divisé par la quantité). Les dépenses ont également une propriété bénéficiaire pour la personne ou une entité, par exemple le magasin où l'on achète reçoit de l'argent, et les entrées ont une catégorie payeur pour celui qui vous donne de l'argent, par exemple votre employeur. </para>

</sect1>

<sect1 id="accounting-schedule">
	<title
>Transactions programmées</title>
	
	<para
>Une transaction programmées est une transaction prévue pour quelque chose qui n'a pas eut lieu. C'est simplement une transaction, de n'importe quel type, dont la date future est définie. Quand une transaction a eut lieu, elle doit une transaction régulière. Les transactions programmées permettent de garder une trace de toutes les transactions futures. &eqonomize; aura besoin d'une confirmation quand la transaction est certifiée d'avoir eut lieu. </para>
	<para
>Une transaction programmée peut être récurrent, régulièrement à une certaine date ou avec un certain intervalle. C'est pratique pour les factures et les salaires, qui n'ont alors plus besoin d'être saisies manuellement chaque fois et vous pouvez utiliser &eqonomize; pour les paiements à venir. Quand une transaction récurrente programmée est vérifiée, une transaction régulière est créée, cette date d'occurrence est enlevée de la récurrence, et la date de la transaction programmée est déplacée vers la prochaine occurrence. Une transaction programmée sans occurrences suivantes est enlevée. </para>
	
</sect1>

<sect1 id="accounting-securities">
<title
>Actions</title>

<para></para>

</sect1>

</chapter>

<chapter id="using-eqonomize">
<title
>Utiliser &eqonomize;</title>

<para
>Cette fenêtre principale consiste en six vue différentes. Quand &eqonomize; est démarré, la vue compte est montrée. Pour changer la vue cliquer sur l'icône correspondant dans la liste verticale sur le côté droit de la fenêtre. </para>

<sect1 id="account_view">
<title
>La vue Compte</title>

<para
>Cette vue de compte affiche une liste de tous les comptes et catégories. Les catégories sont généralement aussi référencé comme des comptes, mais dans ce contexte spécifique elles se rapportent à une division de dépenses ou d'entrées, pendant que le compte désigne un réservoir ou un capital de ressource (généralement un compte banquaire ou du liquide; pour plus d'information voir <xref linkend="accounting"/>) Ils sont sortis alphabétiquement sous chaque type propre - comptes, entrées, et dépenses. </para>

<para
>La liste a quatre colonnes. La première affiche simplement le nom du compte ou de la catégorie. La seconde est pour les catégories affichant le budget pour une période sélectionnée et ce qui ne va pas dans le budget. A moins que l'option <guibutton
>Montrer le budget partiel</guibutton
> est cochée, le budget (et le budget prévisionnel) est affiché pour tous les mois, vous pouvez ainsi voir dans le mode par défaut ce qui arrive dans le budget mensuel courant. La troisième colonne affiche le changement de valeur du compte ou de la catégorie pendant la période sélectionnée, alors que la dernière colonne affiche la valeur totale à la fin de la période (aujourd'hui par défaut). Les lignes pour les principaux types affichent la somme de tous les comptes/catégories suivantes. </para>

 

</sect1>

</chapter>

<chapter id="commands">
<title
>Référence de commande</title>

<sect1 id="eqonomize-mainwindow">
<title
>La fenêtre principale d'&eqonomize;</title>

<sect2>
<title
>Le menu Fichier</title>
<para>
<variablelist>
<varlistentry>
<term
><menuchoice
><shortcut
> <keycombo action="simul"
>&Ctrl;<keycap
>N</keycap
></keycombo
> </shortcut
> <guimenu
>Fichier</guimenu
> <guimenuitem
>Nouveau</guimenuitem
> </menuchoice
></term>
<listitem
><para
><action
>Créer un nouveau document</action
></para
></listitem>
</varlistentry>
<varlistentry>
<term
><menuchoice
><shortcut
> <keycombo action="simul"
>&Ctrl;<keycap
>S</keycap
></keycombo
> </shortcut
> <guimenu
>Fichier</guimenu
> <guimenuitem
>Sauver</guimenuitem
> </menuchoice
></term>
<listitem
><para
><action
>Sauver le document</action
></para
></listitem>
</varlistentry>
<varlistentry>
<term
><menuchoice
><shortcut
> <keycombo action="simul"
>&Ctrl;<keycap
>Q</keycap
></keycombo
> </shortcut
> <guimenu
>Fichier</guimenu
> <guimenuitem
>Quitter</guimenuitem
> </menuchoice
></term>
<listitem
><para
><action
>Quitte</action
> &eqonomize;</para
></listitem>
</varlistentry>
</variablelist>
</para>

</sect2>

<sect2>
<title
>Le menu <guimenu
>Aide</guimenu
></title>
&help.menu.documentation; </sect2>

</sect1>
</chapter>

<chapter id="faq">
<title
>Questions et Réponses</title>

<qandaset id="faqlist">
<qandaentry>
<question>
<para
>Champ question</para>
</question>
<answer>
<para
>Champs réponse.</para>
</answer>
</qandaentry>
</qandaset>
</chapter>

<chapter id="credits">

<!-- Include credits for the programmers, documentation writers, and
contributors here. The license for your software should then be included below
the credits with a reference to the appropriate license file included in the KDE
distribution. -->

<title
>Crédits et License</title>

<para
>&eqonomize; </para>
<para
>Program copyright 2006 Hanna Knutsson <email
>hanna_k@fmgirl.com</email
> </para>
<para
>Contribution: <itemizedlist
> <listitem
><para
>Hanna Knutsson <email
>hanna_k@fmgirl.com</email
></para>
</listitem>
</itemizedlist>
</para>

<para
>Documentation copyright 2006 Hanna Knutsson <email
>hanna_k@fmgirl.com</email
> </para>
<para>
Jérôme Rapinat<email
>gnupower@hotmail.fr</email
> </para>
&underFDL; &underGPL; </chapter>

&documentation.index;
</book>

<!--
Local Variables:
mode: sgml
sgml-minimize-attributes:nil
sgml-general-insert-case:lower
sgml-indent-step:0
sgml-indent-data:nil
End:

vim:tabstop=2:shiftwidth=2:expandtab 
-->

